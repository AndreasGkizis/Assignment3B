@model ModelProject.Models.Candidate

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="card border-light">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div id="contactDetails">
            <div class="card border-light">
                <div class="card-header">
                    Contact Details
                </div>
                <div class="card-body">
                    <div class="form-row" id="candidateNumber">
                        <div class="form-group col-10 text-center mx-auto">
                            @Html.LabelFor(model => model.CandidateNumber, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CandidateNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CandidateNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="contactDetails">
                        <div class="form-row " id="name">
                            <div class="form-group col-md-4 ">
                                @Html.LabelFor(model => model.FirstName)
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.MiddleName)

                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.LastName)
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div id="contactInfo">
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.LandlineNumber, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.LandlineNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LandlineNumber, "", new { @class = "text-danger" })

                            </div>
                            <div class="form-group col-md-4">
                                @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-row">

                        <div class="form-group col-md-4">

                            @Html.LabelFor(model => model.NativeLanguage, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.NativeLanguage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NativeLanguage, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">

                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            @*@Html.DropDownList("Genders", "select your gender")*@
                            @*@Html.DropDownListFor(x=> x.Gender , ViewData.Where(x => x.Key == "Genders") as SelectList)*@
                            @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.CountryOfResidence, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CountryOfResidence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CountryOfResidence, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.TerritoryOfResidence, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.TerritoryOfResidence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TerritoryOfResidence, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.StateOfResidence, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.StateOfResidence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StateOfResidence, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-3">
                            @Html.LabelFor(model => model.TownOfResidence, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.TownOfResidence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TownOfResidence, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.ProvinceOfResidence, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ProvinceOfResidence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProvinceOfResidence, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.CityOfResidence, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CityOfResidence, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityOfResidence, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PhotoIdType, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.PhotoIdType, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PhotoIdType, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PhotoNumber, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PhotoNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhotoNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PhotoIdIssueDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PhotoIdIssueDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhotoIdIssueDate, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-outline-success btn-lg btn-block" />
                    @Html.ActionLink("Go Back to List", "Index", "Admin", new { @class = "btn btn btn-secondary btn-lg btn-block" })
                </div>
            </div>

        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
